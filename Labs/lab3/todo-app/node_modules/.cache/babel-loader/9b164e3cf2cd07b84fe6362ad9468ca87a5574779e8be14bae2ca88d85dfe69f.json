{"ast":null,"code":"var _jsxFileName = \"/Users/ianmei/Documents/GitHub/NWCapstone/Labs/lab3/todo-app/src/components/TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchTodos } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const data = await fetchTodos();\n        setTodos(data);\n      } catch (error) {\n        console.error(\"Error fetching todos:\", error);\n      }\n    };\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: todo.completed,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), todo.title]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","fetchTodos","jsxDEV","_jsxDEV","TodoList","_s","todos","setTodos","getData","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","todo","type","checked","completed","readOnly","title","id","_c","$RefreshReg$"],"sources":["/Users/ianmei/Documents/GitHub/NWCapstone/Labs/lab3/todo-app/src/components/TodoList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchTodos } from '../api';\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const data = await fetchTodos();\n        setTodos(data);\n      } catch (error) {\n        console.error(\"Error fetching todos:\", error);\n      }\n    };\n    getData();\n  }, []);\n\n  return (\n    <div>\n      <h2>Todo List</h2>\n      <ul>\n        {todos.map(todo => (\n          <li key={todo.id}>\n            <input type=\"checkbox\" checked={todo.completed} readOnly />\n            {todo.title}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMQ,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMR,UAAU,CAAC,CAAC;QAC/BM,QAAQ,CAACE,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACDF,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBb,OAAA;MAAAS,QAAA,EACGN,KAAK,CAACW,GAAG,CAACC,IAAI,iBACbf,OAAA;QAAAS,QAAA,gBACET,OAAA;UAAOgB,IAAI,EAAC,UAAU;UAACC,OAAO,EAAEF,IAAI,CAACG,SAAU;UAACC,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC1DE,IAAI,CAACK,KAAK;MAAA,GAFJL,IAAI,CAACM,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACX,EAAA,CA5BQD,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AA8BjB,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}